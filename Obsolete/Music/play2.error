/* eslint-disable no-inline-comments */
const ytdl = require('ytdl-core');
const ytSearch = require('yt-search');
const queue = new Map();

module.exports = {
	name:'play2',
	description:'Reproduccion de cancion/ playlist',
	async execute(message, args) {
		// Variables
		const serverQueue = queue.get(message.guild.id);
		const voiceChannel = message.member.voice.channel;
		// Comprobacion del usuario y argumentos
		if (!voiceChannel) return message.channel.send('¡Necesitas unirte a un canal de voz para reproducir música!');
		const permissions = voiceChannel.permissionsFor(message.client.user);
		if (!permissions.has('CONNECT') || !permissions.has('SPEAK')) {
			return message.channel.send('¡Necesito permisos para unirme y hablar en el canal de voz!');
		}
		if (!args.length) return message.reply('¡Ocupo el nombre de la cancion/playlist!');

		// Obtencion de informacion de la cancion
		// const songMeta[] = IsSong(ytdl, args);
		// Comprobacion de que hay cola de musica
		// eslint-disable-next-line no-empty
		if (!serverQueue) { }
		else {
			serverQueue.songs.push(song);
			console.log(serverQueue.songs);
			return message.channel.send(`${song.title} has been added to the queue!`);
		}
		// Construccion de Cola de Musica
		const queueContruct = {
			textChannel: message.channel,
			voiceChannel: voiceChannel,
			connection: null,
			songs: [],
			volume: 5,
			playing: true,
		};

		queue.set(message.guild.id, queueContruct);
		queueContruct.songs.push(song);

		try {
			const connection = await voiceChannel.join();
			queueContruct.connection = connection;
			play(message.guild, queueContruct.songs[0], queue);
		}
		catch (err) {
			console.log(err);
			queue.delete(message.guild.id);
			return message.channel.send(err);
		}
	},
};

function IsSong(ytdl, args) {
	if (ytdl.validateURL(args[0])) {
		const songInfo = ytdl.getInfo(args[0]); // Quite el await antes del YTDL
		const songData = {
			title: songInfo.videoDetails.title,
			url: songInfo.videoDetails.video_url,
		};
		return [songInfo, songData];
	}
	else {
		const videoFinder = async (query) => {
			const videoResult = await ytSearch(query);
			return (videoResult.videos.length > 1) ? videoResult.videos[0] : null;
		};
		const video = videoFinder(args.join(' ')); // Quite el await antes del videoFinder
		return [video];
	}
}

function play(guild, song) {
	const serverQueue = queue.get(guild.id);
	if (!song) {
		serverQueue.voiceChannel.leave();
		queue.delete(guild.id);
		return;
	}
	const dispatcher = serverQueue.connection
		.play(ytdl(song.url))
		.on('finish', () => {
			serverQueue.songs.shift();
			play(guild, serverQueue.songs[0]);
		})
		.on('error', error => console.error(error));
	dispatcher.setVolumeLogarithmic(serverQueue.volume / 5);
	serverQueue.textChannel.send(`Start playing: **${song.title}**`);
}

function skip(message, serverQueue) {
	if (!message.member.voice.channel) {
		return message.channel.send(
			'You have to be in a voice channel to stop the music!',
		);
	}
	if (!serverQueue) {return message.channel.send('There is no song that I could skip!');}
	serverQueue.connection.dispatcher.end();
}

function stop(message, serverQueue) {
	if (!message.member.voice.channel) {
		return message.channel.send(
			'You have to be in a voice channel to stop the music!',
		);
	}

	if (!serverQueue) {return message.channel.send('There is no song that I could stop!');}

	serverQueue.songs = [];
	serverQueue.connection.dispatcher.end();
}